name: Laravel Docker Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker images
      uses: actions/cache@v3
      with:
        path: ~/.docker
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Cache NPM packages
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Copy .env file
      run: cp .env.example .env

    - name: Build and start containers
      run: |
        docker compose build
        docker compose up -d

    - name: Install Composer Dependencies
      run: docker compose exec -T app composer install --no-interaction --prefer-dist

    - name: Generate Application Key
      run: docker compose exec -T app php artisan key:generate

    - name: Run Database Migrations
      run: docker compose exec -T app php artisan migrate

    - name: Run Tests
      run: docker compose exec -T app php artisan test --parallel

    - name: Install NPM packages
      run: docker compose exec -T app npm ci

    - name: Build Frontend Assets
      run: docker compose exec -T app npm run build

    - name: Stop containers
      if: always()
      run: docker compose down 